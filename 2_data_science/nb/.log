2023-09-15 16:06:55,069 [6582] DEBUG    matplotlib:305: [JupyterRequire] matplotlib data path: /usr/local/lib/python3.10/dist-packages/matplotlib/mpl-data
2023-09-15 16:06:55,077 [6582] DEBUG    matplotlib:305: [JupyterRequire] CONFIGDIR=/root/.config/matplotlib
2023-09-15 16:06:55,079 [6582] DEBUG    matplotlib:1479: [JupyterRequire] interactive is False
2023-09-15 16:06:55,079 [6582] DEBUG    matplotlib:1480: [JupyterRequire] platform is linux
2023-09-15 16:31:09,620 [6582] WARNING  py.warnings:109: [JupyterRequire] /tmp/ipykernel_6582/3986591586.py:12: FutureWarning: The default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  municipio_valor=df.groupby(['Municipio']).sum().sort_values('Valor', ascending=False).progress_apply(lambda x: x**2)

2023-09-15 16:31:27,460 [6582] WARNING  py.warnings:109: [JupyterRequire] /tmp/ipykernel_6582/3986591586.py:12: FutureWarning: The default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  municipio_valor=df.groupby(['Municipio']).sum().sort_values('Valor', ascending=False).progress_apply(lambda x: x**2)

2023-09-15 16:34:23,757 [6582] WARNING  py.warnings:109: [JupyterRequire] /tmp/ipykernel_6582/61565781.py:12: FutureWarning: The default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  Municipio_Pagamentos_valor=df.groupby(['Municipio']).sum().sort_values('Valor', ascending=False).progress_apply(lambda x: x**2)

2023-09-15 16:37:02,277 [6582] WARNING  py.warnings:109: [JupyterRequire] /tmp/ipykernel_6582/494334563.py:2: FutureWarning: The default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  Municipio_Pagamentos_valor=df.groupby(['Municipio']).sum().sort_values('Valor', ascending=False).progress_apply(lambda x: x**2)

2023-09-15 16:38:38,379 [6582] WARNING  py.warnings:109: [JupyterRequire] /tmp/ipykernel_6582/494334563.py:2: FutureWarning: The default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  Municipio_Pagamentos_valor=df.groupby(['Municipio']).sum().sort_values('Valor', ascending=False).progress_apply(lambda x: x**2)

2023-09-15 16:41:08,143 [6582] WARNING  py.warnings:109: [JupyterRequire] /tmp/ipykernel_6582/762515938.py:2: FutureWarning: The default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  Municipio_Pagamentos_valor=df.groupby(['Municipio']).sum().sort_values('Valor').progress_apply(lambda x: x**2)

2023-09-15 16:47:15,897 [6582] WARNING  py.warnings:109: [JupyterRequire] /tmp/ipykernel_6582/494334563.py:2: FutureWarning: The default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  Municipio_Pagamentos_valor=df.groupby(['Municipio']).sum().sort_values('Valor', ascending=False).progress_apply(lambda x: x**2)

2023-09-15 16:50:36,759 [6582] WARNING  py.warnings:109: [JupyterRequire] /tmp/ipykernel_6582/1655361990.py:2: FutureWarning: The default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  Municipio_Pagamentos_valor=df.groupby(['Municipio']).sum().sort_values('Valor', ascending=False).progress_apply(lambda x: x**2)

2023-09-15 16:56:23,991 [6582] DEBUG    matplotlib:305: [JupyterRequire] CACHEDIR=/root/.cache/matplotlib
2023-09-15 16:56:23,996 [6582] DEBUG    matplotlib.font_manager:1543: [JupyterRequire] Using fontManager instance from /root/.cache/matplotlib/fontlist-v330.json
2023-09-15 16:56:24,555 [6582] DEBUG    matplotlib.pyplot:339: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-09-15 16:56:24,557 [6582] DEBUG    matplotlib.pyplot:339: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-09-15 16:56:24,563 [6582] DEBUG    matplotlib.font_manager:1379: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-09-15 16:56:24,564 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/local/lib/python3.10/dist-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-09-15 16:56:24,564 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/local/lib/python3.10/dist-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-09-15 16:56:24,565 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/local/lib/python3.10/dist-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-09-15 16:56:24,565 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/local/lib/python3.10/dist-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-09-15 16:56:24,565 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/local/lib/python3.10/dist-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-09-15 16:56:24,565 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/local/lib/python3.10/dist-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-09-15 16:56:24,566 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/local/lib/python3.10/dist-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-09-15 16:56:24,566 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/local/lib/python3.10/dist-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-09-15 16:56:24,566 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/local/lib/python3.10/dist-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-09-15 16:56:24,567 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/local/lib/python3.10/dist-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-09-15 16:56:24,567 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/local/lib/python3.10/dist-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-09-15 16:56:24,567 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/local/lib/python3.10/dist-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-09-15 16:56:24,567 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/local/lib/python3.10/dist-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-09-15 16:56:24,568 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/local/lib/python3.10/dist-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-09-15 16:56:24,568 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/local/lib/python3.10/dist-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-09-15 16:56:24,568 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/local/lib/python3.10/dist-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-09-15 16:56:24,568 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/local/lib/python3.10/dist-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-09-15 16:56:24,569 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/local/lib/python3.10/dist-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-09-15 16:56:24,569 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/local/lib/python3.10/dist-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-09-15 16:56:24,569 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/local/lib/python3.10/dist-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-09-15 16:56:24,569 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/local/lib/python3.10/dist-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-09-15 16:56:24,570 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/local/lib/python3.10/dist-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-09-15 16:56:24,570 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/local/lib/python3.10/dist-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-09-15 16:56:24,570 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/local/lib/python3.10/dist-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-09-15 16:56:24,571 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/local/lib/python3.10/dist-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-09-15 16:56:24,571 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/local/lib/python3.10/dist-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-09-15 16:56:24,571 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/local/lib/python3.10/dist-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-09-15 16:56:24,571 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/local/lib/python3.10/dist-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-09-15 16:56:24,572 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/local/lib/python3.10/dist-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-09-15 16:56:24,572 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/local/lib/python3.10/dist-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-09-15 16:56:24,572 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/local/lib/python3.10/dist-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-09-15 16:56:24,572 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/local/lib/python3.10/dist-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-09-15 16:56:24,573 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/local/lib/python3.10/dist-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-09-15 16:56:24,573 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/local/lib/python3.10/dist-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-09-15 16:56:24,573 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/local/lib/python3.10/dist-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-09-15 16:56:24,573 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/local/lib/python3.10/dist-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-09-15 16:56:24,574 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/local/lib/python3.10/dist-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-09-15 16:56:24,574 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/local/lib/python3.10/dist-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-09-15 16:56:24,574 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMono-Bold.ttf', name='Noto Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-09-15 16:56:24,574 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Oblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-09-15 16:56:24,575 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Regular.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-09-15 16:56:24,575 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-BlackItalic.ttf', name='Lato', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-09-15 16:56:24,575 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMono-Regular.ttf', name='Noto Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-09-15 16:56:24,575 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Regular.otf', name='Nimbus Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-09-15 16:56:24,576 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-BoldOblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-09-15 16:56:24,576 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-09-15 16:56:24,576 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Bold.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-09-15 16:56:24,577 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Semibold.ttf', name='Lato', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-09-15 16:56:24,577 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-09-15 16:56:24,577 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Demi.otf', name='URW Gothic', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-09-15 16:56:24,577 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/StandardSymbolsPS.otf', name='Standard Symbols PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-09-15 16:56:24,578 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-BoldItalic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-09-15 16:56:24,579 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-BoldItalic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-09-15 16:56:24,579 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-SemiboldItalic.ttf', name='Lato', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-09-15 16:56:24,579 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-MediumItalic.ttf', name='Lato', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-09-15 16:56:24,579 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-09-15 16:56:24,580 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Italic.ttf', name='Lato', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-09-15 16:56:24,580 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/Z003-MediumItalic.otf', name='Z003', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-09-15 16:56:24,580 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-HeavyItalic.ttf', name='Lato', style='italic', variant='normal', weight=800, stretch='normal', size='scalable')) = 11.43
2023-09-15 16:56:24,580 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-09-15 16:56:24,581 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Bold.otf', name='C059', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-09-15 16:56:24,581 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Regular.otf', name='Nimbus Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-09-15 16:56:24,581 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-DemiItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-09-15 16:56:24,581 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Italic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-09-15 16:56:24,582 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-09-15 16:56:24,582 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Book.otf', name='URW Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-09-15 16:56:24,582 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-09-15 16:56:24,583 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Bold.ttf', name='Lato', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-09-15 16:56:24,583 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-09-15 16:56:24,583 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-09-15 16:56:24,583 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-LightItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-09-15 16:56:24,584 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-09-15 16:56:24,584 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-09-15 16:56:24,584 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/D050000L.otf', name='D050000L', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-09-15 16:56:24,585 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-DemiOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-09-15 16:56:24,585 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-09-15 16:56:24,585 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/droid/DroidSansFallbackFull.ttf', name='Droid Sans Fallback', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-09-15 16:56:24,585 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-BookOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-09-15 16:56:24,586 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Bold.otf', name='Nimbus Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-09-15 16:56:24,586 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Regular.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-09-15 16:56:24,586 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Heavy.ttf', name='Lato', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-09-15 16:56:24,586 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Light.ttf', name='Lato', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-09-15 16:56:24,586 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-HairlineItalic.ttf', name='Lato', style='italic', variant='normal', weight=100, stretch='normal', size='scalable')) = 11.335
2023-09-15 16:56:24,587 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-09-15 16:56:24,587 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Bold.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-09-15 16:56:24,587 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-09-15 16:56:24,587 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Regular.ttf', name='Lato', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-09-15 16:56:24,588 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Black.ttf', name='Lato', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-09-15 16:56:24,588 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-LightItalic.ttf', name='Lato', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-09-15 16:56:24,588 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Roman.otf', name='C059', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-09-15 16:56:24,588 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Light.otf', name='URW Bookman', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-09-15 16:56:24,588 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-09-15 16:56:24,589 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-09-15 16:56:24,589 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-09-15 16:56:24,589 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-09-15 16:56:24,589 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-09-15 16:56:24,590 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Demi.otf', name='URW Bookman', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-09-15 16:56:24,590 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Roman.otf', name='P052', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-09-15 16:56:24,590 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-BoldItalic.otf', name='P052', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-09-15 16:56:24,591 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-09-15 16:56:24,591 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-ThinItalic.ttf', name='Lato', style='italic', variant='normal', weight=200, stretch='normal', size='scalable')) = 11.24
2023-09-15 16:56:24,591 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-Th.ttf', name='Ubuntu', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2023-09-15 16:56:24,591 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Thin.ttf', name='Lato', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2023-09-15 16:56:24,592 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-BdIta.otf', name='C059', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-09-15 16:56:24,592 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Bold.otf', name='P052', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-09-15 16:56:24,592 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Bold.otf', name='Nimbus Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-09-15 16:56:24,593 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Italic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-09-15 16:56:24,593 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Medium.ttf', name='Lato', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-09-15 16:56:24,593 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Italic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-09-15 16:56:24,593 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Italic.otf', name='P052', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-09-15 16:56:24,594 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-BoldItalic.ttf', name='Lato', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-09-15 16:56:24,594 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Hairline.ttf', name='Lato', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-09-15 16:56:24,594 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-BoldItalic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-09-15 16:56:24,594 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Italic.otf', name='C059', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-09-15 16:56:24,595 [6582] DEBUG    matplotlib.font_manager:1391: [JupyterRequire] findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-09-15 16:56:24,595 [6582] DEBUG    matplotlib.font_manager:1422: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/usr/local/lib/python3.10/dist-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2023-09-15 17:05:13,339 [6582] WARNING  py.warnings:109: [JupyterRequire] /tmp/ipykernel_6582/2697883501.py:2: FutureWarning: The default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  Municipios_Pagamentos_valor=df.groupby(['Municipio']).sum().sort_values('Valor', ascending=False).progress_apply(lambda x: x**2)

2023-09-15 17:06:18,122 [6582] WARNING  py.warnings:109: [JupyterRequire] /tmp/ipykernel_6582/1012271555.py:2: FutureWarning: The default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  Municipios_Pagamentos_valor=df.groupby(['Municipio']).sum().sort_values('Valor', ascending=False).progress_apply(lambda x: x**2)

2023-09-15 17:07:43,465 [6582] WARNING  py.warnings:109: [JupyterRequire] /tmp/ipykernel_6582/3269742096.py:2: FutureWarning: The default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  Municipios_Pagamentos_Valor=df.groupby(['Municipio']).sum().sort_values('Valor', ascending=False).progress_apply(lambda x: x**2)

2023-09-15 20:32:38,396 [6582] WARNING  py.warnings:109: [JupyterRequire] /tmp/ipykernel_6582/3269742096.py:2: FutureWarning: The default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  Municipios_Pagamentos_Valor=df.groupby(['Municipio']).sum().sort_values('Valor', ascending=False).progress_apply(lambda x: x**2)

2023-09-15 20:37:43,524 [6582] WARNING  py.warnings:109: [JupyterRequire] /tmp/ipykernel_6582/3785537639.py:2: FutureWarning: The default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  Total_Pagamentos_por_Municipio=df.groupby(['Municipio']).sum().sort_values('Valor', ascending=False).progress_apply(lambda x: x**2)

2023-09-15 20:41:25,258 [6582] WARNING  py.warnings:109: [JupyterRequire] /tmp/ipykernel_6582/717200654.py:3: FutureWarning: The default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  Total_Pagamentos_por_Municipio=df.groupby(['Municipio']).sum().progress_apply(lambda x: x**2)

2023-09-15 20:41:43,249 [6582] WARNING  py.warnings:109: [JupyterRequire] /tmp/ipykernel_6582/24929468.py:3: FutureWarning: The default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  Total_Pagamentos_por_Municipio=df.groupby(['Municipio']).sum()

2023-09-15 20:43:51,636 [6582] WARNING  py.warnings:109: [JupyterRequire] /tmp/ipykernel_6582/2047498655.py:3: FutureWarning: The default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  Total_Pagamentos_por_Municipio=df.groupby(['Municipio']).sum()

2023-09-15 20:43:59,891 [6582] WARNING  py.warnings:109: [JupyterRequire] /tmp/ipykernel_6582/2047498655.py:3: FutureWarning: The default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  Total_Pagamentos_por_Municipio=df.groupby(['Municipio']).sum()

2023-09-15 20:48:20,255 [6582] WARNING  py.warnings:109: [JupyterRequire] /tmp/ipykernel_6582/2170225921.py:3: FutureWarning: In a future version of pandas all arguments of Series.sort_values will be keyword-only.
  Total_Pagamentos_por_Municipio=df.groupby(['Municipio'])['Valor'].sum().sort_values('Valor', ascending=False).progress_apply(lambda x: x**2)

2023-09-15 20:53:33,717 [6582] WARNING  py.warnings:109: [JupyterRequire] /tmp/ipykernel_6582/2520610709.py:2: FutureWarning: In a future version of pandas all arguments of Series.sort_values will be keyword-only.
  Total_Pagamentos_por_Municipio=df.groupby(['Municipio'])['Valor'].sum().sort_values('Valor', ascending=False).progress_apply(lambda x: x**2)

2023-09-16 15:41:43,124 [458] DEBUG    matplotlib:305: [JupyterRequire] matplotlib data path: /usr/local/lib/python3.10/dist-packages/matplotlib/mpl-data
2023-09-16 15:41:43,134 [458] DEBUG    matplotlib:305: [JupyterRequire] CONFIGDIR=/root/.config/matplotlib
2023-09-16 15:41:43,136 [458] DEBUG    matplotlib:1479: [JupyterRequire] interactive is False
2023-09-16 15:41:43,136 [458] DEBUG    matplotlib:1480: [JupyterRequire] platform is linux
2023-09-17 14:56:03,493 [6713] DEBUG    matplotlib:305: [JupyterRequire] matplotlib data path: /usr/local/lib/python3.10/dist-packages/matplotlib/mpl-data
2023-09-17 14:56:03,581 [6713] DEBUG    matplotlib:305: [JupyterRequire] CONFIGDIR=/root/.config/matplotlib
2023-09-17 14:56:03,584 [6713] DEBUG    matplotlib:1479: [JupyterRequire] interactive is False
2023-09-17 14:56:03,584 [6713] DEBUG    matplotlib:1480: [JupyterRequire] platform is linux
2023-09-17 15:36:19,405 [6713] WARNING  py.warnings:109: [JupyterRequire] /tmp/ipykernel_6713/2793443135.py:7: FutureWarning: In a future version of pandas all arguments of concat except for the argument 'objs' will be keyword-only.
  teste = pd.concat(Quantidade_Pagamentos_por_Municipio, Total_Pagamentos_por_Municipio)

2023-09-17 15:38:10,525 [6713] WARNING  py.warnings:109: [JupyterRequire] /tmp/ipykernel_6713/3718822543.py:7: FutureWarning: In a future version of pandas all arguments of concat except for the argument 'objs' will be keyword-only.
  teste = pd.concat(Quantidade_Pagamentos_por_Municipio, Total_Pagamentos_por_Municipio).groupby(['Municipio'])

2023-09-17 15:38:36,478 [6713] WARNING  py.warnings:109: [JupyterRequire] /tmp/ipykernel_6713/4005421296.py:7: FutureWarning: In a future version of pandas all arguments of concat except for the argument 'objs' will be keyword-only.
  teste = pd.concat(Quantidade_Pagamentos_por_Municipio, Total_Pagamentos_por_Municipio).groupby(['Municipio'], sort=False)

2023-09-17 15:40:09,420 [6713] WARNING  py.warnings:109: [JupyterRequire] /tmp/ipykernel_6713/2058397184.py:7: FutureWarning: In a future version of pandas all arguments of concat except for the argument 'objs' will be keyword-only.
  teste = pd.concat(Quantidade_Pagamentos_por_Municipio, Total_Pagamentos_por_Municipio).groupby(['Municipio'], sort=true)

2023-09-17 15:40:23,953 [6713] WARNING  py.warnings:109: [JupyterRequire] /tmp/ipykernel_6713/1420908005.py:7: FutureWarning: In a future version of pandas all arguments of concat except for the argument 'objs' will be keyword-only.
  teste = pd.concat(Quantidade_Pagamentos_por_Municipio, Total_Pagamentos_por_Municipio)

2023-09-17 15:46:34,167 [6713] WARNING  py.warnings:109: [JupyterRequire] /tmp/ipykernel_6713/3533545289.py:3: FutureWarning: Indexing with multiple keys (implicitly converted to a tuple of keys) will be deprecated, use a list instead.
  Total_Pagamentos_por_Municipio=df.groupby(['Municipio'])['Municipio','Valor'].sum().progress_apply(lambda x: x**2)

2023-09-17 15:46:34,444 [6713] WARNING  py.warnings:109: [JupyterRequire] /tmp/ipykernel_6713/3533545289.py:3: FutureWarning: The default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  Total_Pagamentos_por_Municipio=df.groupby(['Municipio'])['Municipio','Valor'].sum().progress_apply(lambda x: x**2)

2023-09-17 15:47:19,319 [6713] WARNING  py.warnings:109: [JupyterRequire] /tmp/ipykernel_6713/316790801.py:3: FutureWarning: Indexing with multiple keys (implicitly converted to a tuple of keys) will be deprecated, use a list instead.
  Total_Pagamentos_por_Municipio=df.groupby(['Municipio'])['Municipioxxx','Valor'].sum().progress_apply(lambda x: x**2)

2023-09-17 15:47:28,973 [6713] WARNING  py.warnings:109: [JupyterRequire] /tmp/ipykernel_6713/3533545289.py:3: FutureWarning: Indexing with multiple keys (implicitly converted to a tuple of keys) will be deprecated, use a list instead.
  Total_Pagamentos_por_Municipio=df.groupby(['Municipio'])['Municipio','Valor'].sum().progress_apply(lambda x: x**2)

2023-09-17 15:47:29,270 [6713] WARNING  py.warnings:109: [JupyterRequire] /tmp/ipykernel_6713/3533545289.py:3: FutureWarning: The default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  Total_Pagamentos_por_Municipio=df.groupby(['Municipio'])['Municipio','Valor'].sum().progress_apply(lambda x: x**2)

2023-09-17 15:48:03,389 [6713] WARNING  py.warnings:109: [JupyterRequire] /tmp/ipykernel_6713/3533545289.py:3: FutureWarning: Indexing with multiple keys (implicitly converted to a tuple of keys) will be deprecated, use a list instead.
  Total_Pagamentos_por_Municipio=df.groupby(['Municipio'])['Municipio','Valor'].sum().progress_apply(lambda x: x**2)

2023-09-17 15:48:03,674 [6713] WARNING  py.warnings:109: [JupyterRequire] /tmp/ipykernel_6713/3533545289.py:3: FutureWarning: The default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  Total_Pagamentos_por_Municipio=df.groupby(['Municipio'])['Municipio','Valor'].sum().progress_apply(lambda x: x**2)

2023-09-17 15:49:30,087 [6713] WARNING  py.warnings:109: [JupyterRequire] /tmp/ipykernel_6713/1110779383.py:3: FutureWarning: Indexing with multiple keys (implicitly converted to a tuple of keys) will be deprecated, use a list instead.
  Total_Pagamentos_por_Municipio=df.groupby(['Municipio'])['Municipio','Valor'].sum().progress_apply(lambda x: x**2)

2023-09-17 15:49:30,386 [6713] WARNING  py.warnings:109: [JupyterRequire] /tmp/ipykernel_6713/1110779383.py:3: FutureWarning: The default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  Total_Pagamentos_por_Municipio=df.groupby(['Municipio'])['Municipio','Valor'].sum().progress_apply(lambda x: x**2)

2023-09-17 15:50:06,361 [6713] WARNING  py.warnings:109: [JupyterRequire] /tmp/ipykernel_6713/1110779383.py:3: FutureWarning: Indexing with multiple keys (implicitly converted to a tuple of keys) will be deprecated, use a list instead.
  Total_Pagamentos_por_Municipio=df.groupby(['Municipio'])['Municipio','Valor'].sum().progress_apply(lambda x: x**2)

2023-09-17 15:50:06,633 [6713] WARNING  py.warnings:109: [JupyterRequire] /tmp/ipykernel_6713/1110779383.py:3: FutureWarning: The default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  Total_Pagamentos_por_Municipio=df.groupby(['Municipio'])['Municipio','Valor'].sum().progress_apply(lambda x: x**2)

2023-09-17 15:50:34,564 [6713] WARNING  py.warnings:109: [JupyterRequire] /tmp/ipykernel_6713/3717923934.py:3: FutureWarning: Indexing with multiple keys (implicitly converted to a tuple of keys) will be deprecated, use a list instead.
  Total_Pagamentos_por_Municipio=df.groupby(['Municipio'])['Valor','Municipio'].sum().progress_apply(lambda x: x**2)

2023-09-17 15:50:34,874 [6713] WARNING  py.warnings:109: [JupyterRequire] /tmp/ipykernel_6713/3717923934.py:3: FutureWarning: The default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  Total_Pagamentos_por_Municipio=df.groupby(['Municipio'])['Valor','Municipio'].sum().progress_apply(lambda x: x**2)

2023-09-22 22:12:08,119 [351] DEBUG    matplotlib:305: [JupyterRequire] matplotlib data path: /usr/local/lib/python3.10/dist-packages/matplotlib/mpl-data
2023-09-22 22:12:08,168 [351] DEBUG    matplotlib:305: [JupyterRequire] CONFIGDIR=/root/.config/matplotlib
2023-09-22 22:12:08,181 [351] DEBUG    matplotlib:1479: [JupyterRequire] interactive is False
2023-09-22 22:12:08,182 [351] DEBUG    matplotlib:1480: [JupyterRequire] platform is linux
